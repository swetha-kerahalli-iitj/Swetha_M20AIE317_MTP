Namespace(encoder='TurboAE_rate3_cnn', decoder='TurboAE_rate3_cnn', is_k_same_code=False, vv=5, radar_prob=0.05, radar_power=5.0, train_enc_channel_low=0.0, train_enc_channel_high=100, train_dec_channel_low=0.0, train_dec_channel_high=100.0, init_nw_weight='default', joint_train=0, enc_rnn='gru', dec_rnn='gru', enc_num_layer=3, dec_num_layer=3, dec_num_unit=100, enc_num_unit=25, enc_act='elu', dec_act='linear', num_train_dec=5, num_train_enc=1, num_train_mod=1, num_train_demod=5, num_iteration=6, enc_kernel_size=5, dec_kernel_size=5, extrinsic=1, num_iter_ft=5, mod_pc='qpsk', is_interleave=1, is_same_interleaver=1, mod_num_layer=1, mod_num_unit=20, demod_num_layer=1, demod_num_unit=20, mod_lr=0.005, demod_lr=0.005, dropout=0.0, snr_test_start=0, snr_test_end=100, snr_points=20, batch_size=10, num_epoch=2, test_ratio=1, block_len=(10, 20), code_rate_k=1, code_rate_n=3, channel=('awgn', 'fading'), modtype=('QAM2', 'QAM4'), mod_rate=(2, 4), block_len_low=10, block_len_high=200, is_variable_block_len=False, num_block=100, test_channel_mode='block_norm', train_channel_mode='block_norm', enc_truncate_limit=0, no_code_norm=False, enc_quantize_level=2, enc_value_limit=1.0, enc_grad_limit=0.01, enc_clipping='both', optimizer='adam', dec_lr=0.01, enc_lr=0.01, no_cuda=False, rec_quantize=False, print_pos_ber=False, print_pos_power=False, print_test_traj=False, precompute_norm_stats=False, D=1, BASE_PATH='C:\\WorkSpace\\FadingChannels\\Swetha_M20AIE317_MTP\\Fading', LOG_PATH='C:\\WorkSpace\\FadingChannels\\Swetha_M20AIE317_MTP\\Fading\\20230811_001123\\logs_faded', DATA_PATH='C:\\WorkSpace\\FadingChannels\\Swetha_M20AIE317_MTP\\Fading\\20230811_001123\\data_faded', MODEL_PATH='C:\\WorkSpace\\FadingChannels\\Swetha_M20AIE317_MTP\\Fading\\20230811_001123\\model_faded', PLOT_PATH='C:\\WorkSpace\\FadingChannels\\Swetha_M20AIE317_MTP\\Fading\\20230811_001123\\plot_faded')
use_cuda:  False

 
 ###############################################################################################
Training Model for : block length => 10 coderate_k => 1 coderate_n => 3 channel => awgn mod type=> QAM2
using random interleaver [2 8 4 9 1 6 7 3 0 5] [3 5 1 2 9 8 0 6 7 4]
Channel_ModAE(
  (enc): ENC_interCNN(
    (enc_cnn_1): SameShapeConv1d(
      (cnns): ModuleList(
        (0): Conv1d(1, 25, kernel_size=(5,), stride=(1,), padding=(2,))
        (1): Conv1d(25, 25, kernel_size=(5,), stride=(1,), padding=(2,))
        (2): Conv1d(25, 25, kernel_size=(5,), stride=(1,), padding=(2,))
      )
    )
    (enc_cnn_2): SameShapeConv1d(
      (cnns): ModuleList(
        (0): Conv1d(1, 25, kernel_size=(5,), stride=(1,), padding=(2,))
        (1): Conv1d(25, 25, kernel_size=(5,), stride=(1,), padding=(2,))
        (2): Conv1d(25, 25, kernel_size=(5,), stride=(1,), padding=(2,))
      )
    )
    (enc_cnn_3): SameShapeConv1d(
      (cnns): ModuleList(
        (0): Conv1d(1, 25, kernel_size=(5,), stride=(1,), padding=(2,))
        (1): Conv1d(25, 25, kernel_size=(5,), stride=(1,), padding=(2,))
        (2): Conv1d(25, 25, kernel_size=(5,), stride=(1,), padding=(2,))
      )
    )
    (enc_linear_1): Linear(in_features=25, out_features=1, bias=True)
    (enc_linear_2): Linear(in_features=25, out_features=1, bias=True)
    (enc_linear_3): Linear(in_features=25, out_features=1, bias=True)
    (interleaver): Interleaver()
  )
  (dec): DEC_LargeCNN(
    (interleaver): Interleaver()
    (deinterleaver): DeInterleaver()
    (dec1_cnns): ModuleList(
      (0): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
      (1): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
      (2): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
      (3): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
      (4): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
      (5): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
    )
    (dec2_cnns): ModuleList(
      (0): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
      (1): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
      (2): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
      (3): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
      (4): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
      (5): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
    )
    (dec1_outputs): ModuleList(
      (0): Linear(in_features=100, out_features=5, bias=True)
      (1): Linear(in_features=100, out_features=5, bias=True)
      (2): Linear(in_features=100, out_features=5, bias=True)
      (3): Linear(in_features=100, out_features=5, bias=True)
      (4): Linear(in_features=100, out_features=5, bias=True)
      (5): Linear(in_features=100, out_features=5, bias=True)
    )
    (dec2_outputs): ModuleList(
      (0): Linear(in_features=100, out_features=5, bias=True)
      (1): Linear(in_features=100, out_features=5, bias=True)
      (2): Linear(in_features=100, out_features=5, bias=True)
      (3): Linear(in_features=100, out_features=5, bias=True)
      (4): Linear(in_features=100, out_features=5, bias=True)
      (5): Linear(in_features=100, out_features=1, bias=True)
    )
  )
  (mod): Modulation(
    (mod_layer): SameShapeConv1d(
      (cnns): ModuleList(
        (0): Conv1d(2, 20, kernel_size=(1,), stride=(1,))
      )
    )
    (mod_final): SameShapeConv1d(
      (cnns): ModuleList(
        (0): Conv1d(20, 2, kernel_size=(1,), stride=(1,))
      )
    )
  )
  (demod): DeModulation(
    (demod_layer): SameShapeConv1d(
      (cnns): ModuleList(
        (0): Conv1d(2, 20, kernel_size=(1,), stride=(1,))
      )
    )
    (demod_final): SameShapeConv1d(
      (cnns): ModuleList(
        (0): Conv1d(20, 2, kernel_size=(1,), stride=(1,))
      )
    )
  )
)
Backend TkAgg is interactive backend. Turning interactive mode on.
